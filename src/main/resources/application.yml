spring:
  kafka:
    template:
      default-topic: gateway
    bootstrap-servers: 10.124.210.54:9092,10.124.210.54:9093,10.124.210.55:9092,10.124.210.55:9093
    consumer:
      auto-offset-reset: latest
      group-id: gateway
      client-id: gateway
    producer:
      retries: 3
      client-id: gateway
      batch-size: 4096
      buffer-memory: 40960
    listener:
      type: single
      client-id: mip-gateway
  cloud:
    gateway:
      datasource: false
      routes:
      - id: frontend
        uri: http://localhost:8000
        predicates:
        - Path=/mip-front/**
        - Weight=service1, 50
        filters:
        - RewritePath=/(?<segment>.*), /$\{segment}

      - id: frontend
        uri: http://localhost:8000
        predicates:
        - Path=/mip-front/**
        - Weight=service1, 50
        filters:
        - RewritePath=/(?<segment>.*), /$\{segment}

      - id: backend
        uri: http://localhost:8000
        order: 10
        predicates:
        - Path=/gateway/**
        filters:
        - RewritePath=/(?<segment>.*), /$\{segment}

#      - id: service1_v1
#        uri: http://localhost:8000/hello
#        predicates:
#        - Path=/test
#        - Weight=service1, 50
#        filters:
#        - name: RequestRateLimiter
#          args:
#        #    keyResolver: '#{@ipAddressKeyResolver}'
#            in-memory-rate-limiter:
#              replenish-rate: 10
#              burst-capacity: 20
#        - name: Hystrix
#          args:
#            name: yangFallBack
#            fallbackUri: forward:/fallback
#      - id: service1_v2
#        uri: http://localhost:8000/demo
#        predicates:
#        - Path=/test
#        - Weight=service1, 50
#        filters:
#        - name: RequestRateLimiter
#          args:
#        #    keyResolver: '#{@ipAddressKeyResolver}'
#            in-memory-rate-limiter:
#              replenish-rate: 10
#              burst-capacity: 20
#        - name: Hystrix
#          args:
#            name: yangFallBack
#            fallbackUri: forward:/fallback
#      - id: common
#        uri: http://localhost:8000/hello
#        order: 9000
#        predicates:
#        - Path=/proxy
#        filters:
#        #- RequestRateLimiter=10000, 20000, #{@principalNameKeyResolver}
#        - name: Hystrix
#          args:
#            name: yangFallBack
#            fallbackUri: forward:/fallback
  data:
    mongodb:
      host: 106.12.80.244
      port: 32769
  redis:
    host: 106.12.80.244
    port: 32768
    jedis:
      pool:
        max-active: 8
        max-wait: 5000
        min-idle: 1
        max-idle: 8
    database: 0
    timeout: 6000
  datasource:
    druid:
      url: jdbc:mysql://106.12.80.244:3316/mydb
      username: root
      password: 98765432
      stat-view-servlet:
        login-password: 123456
        login-username: user
        enabled: false
      web-stat-filter:
        enabled: false

logging:
  level:
    org.springframework.cloud:
      gateway: debug

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    shutdown:
      enabled: false
    mappings:
      enabled: false
    metrics:
      enabled: true

hystrix:
  metrics:
    enabled: true